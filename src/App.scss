@use "sass:math";

// Mixin to set width and height
@mixin sizer($width, $height: $width) {
  height: $height;
  width: $width;
}

// Global styles
* {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

ul {
  list-style: none;
}

// Variables
$orb-size: 200px;
$time: 14s;
$total-particles: 300;



// Wrap class
.wrap {
  animation: rotate $time infinite linear;
  @include sizer(0);
  left: 50%;
  perspective: 1000px;
  position: relative;
  top: 50%;
  transform-style: preserve-3d;

  .particle {
    border-radius: 50%;
    @include sizer(6px);
    opacity: 0;
    position: absolute;
  }
}

// Dynamic particle styles
@for $i from 1 through $total-particles {
  $z: (random(360) * 1deg);
  $y: (random(360) * 1deg);
  $hue: (((40 / $total-particles) * $i) + 180);

  .particle:nth-child(#{$i}) {
    animation: orbit#{$i} $time infinite;
    animation-delay: ($i * 0.01s);
    background-color: hsla($hue, 100%, 50%, 1);
  }

  @keyframes orbit#{$i} {
    20% {
      opacity: 1;
    }

    30% {
      transform: rotateZ(-$z) rotateY($y) translateX($orb-size) rotateZ($z);
    }

    80% {
      opacity: 1;
      transform: rotateZ(-$z) rotateY($y) translateX($orb-size) rotateZ($z);
    }

    100% {
      transform: rotateZ(-$z) rotateY($y) translateX(($orb-size * 3)) rotateZ($z);
    }
  }
}

// Rotate animation for wrap
@keyframes rotate {
  100% {
    transform: rotateY(360deg) rotateX(360deg);
  }
}